version: '3.9'

services:
  app:
    container_name: gunicorn
    build: .
    command: bash -c "uv run python /srv/www/education_platform/manage.py migrate --noinput &&
      uv run gunicorn -c gunicorn.py education_platform.wsgi"
    volumes:
      - .:/srv/www/education_platform/education
    expose:
      - 8000
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8000/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    container_name: database
    image: postgres:14
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/db:/var/lib/postgres/data

  redis:
    container_name: redis
    image: redis
    restart: always
    volumes:
      - ./data/cache:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

  nginx:
    container_name: nginx
    # при падении будет стараться подняться
    restart: always
    image: nginx:latest
    # слушает порт 8080
    expose:
      - 8080
    ports:
      - "80:8080"
      - "443:443"
    volumes:
      - ./education/static:/srv/www/education_platform/static
      - ./education/media:/srv/www/education_platform/media
      - ./education/logs:/srv/www/education_platform/logs
      - ./education/ssl/:/srv/www/education_platform/ssl
      - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      - app
#  daphne:
#    container_name: daphne
#    build: .
#    working_dir: /srv/www/education_platform/
#    command: [ "daphne", "-u", "/srv/www/education_platform/daphne.sock",
#               "education_platform.education_platform.asgi:application" ]
#    restart: always
#    volumes:
#      - .:/srv/www/education_platform/
#    env_file:
#      - .env
#    depends_on:
#      app:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
#      db:
#        condition: service_healthy
